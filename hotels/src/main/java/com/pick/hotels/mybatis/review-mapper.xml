<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
	이 파일은 SQL 명령만 보관하는 파일
	따라서 외부에서 접근할 수 있도록 namespace를 지정
 -->
 
<mapper namespace="review">
	<insert id="write" parameterType="reviewDto">
		insert into review values(
		review_seq.nextval, #{review_writer}, #{review_hotel}, #{review_reserve}, 
		#{review_score}, #{review_content}, sysdate, '등록')
	</insert>
	
	<select id="check" parameterType="int" resultType="reviewDto">
		select * from review where review_reserve = #{reserve_no}
	</select>
	
	<select id="list" parameterType="int" resultType="reviewVO">
	 select
        H.hotel_name,
        R.room_name,
        RV.reserve_in,
        RV.reserve_out,
        RW.review_score,
        RW.review_content,
        RW.review_when,
        RW.review_no
    from
        hotel H 
        inner join room R on R.hotel_no = H.hotel_no
        inner join reserve RV on  RV.reserve_room_no = R.room_no
        inner join review RW on  RW.review_reserve = RV.reserve_no
	where
		RW.review_state = '등록'
		order by review_no desc
	</select>
	
	<update id="change" parameterType="reviewDto">
		update review
			set
				review_state = '삭제'
			where
				review_no = #{review_no}
	</update>
	
	<select id="count" parameterType="reviewDto" resultType="reviewDto">
		select count(*) from review
	</select>
	
	
	<!-- 호텔 뷰에서 사용할 리뷰 mapper 시작 -->
	<select id="getavgstar" parameterType="int" resultType="_float">
		select round(avg(review_score),1) from review where review_hotel = #{hotel_no}
	</select>
	
	<select id="h_get_list" parameterType="int" resultType="review_list_vo">
		select r1.review_score, r1.review_content, r1.review_when, r3.room_name
		from review R1
		inner join reserve R2
		on r1.review_reserve = R2.reserve_no
		inner join Room R3
		on r2.reserve_room_no = r3.room_no
		where
		r1.review_hotel = #{hotel_no} and r1.review_state ='등록'
		order by r1.review_no desc
	</select>
	<!-- 호텔 뷰에서 사용할 리뷰 mapper 종료 -->
  
  	<!--  관리자   -->
	
	<!-- 리뷰 리스트  -->
	<select id="admin_review_list" parameterType="map" resultType="reviewVO">
		SELECT * FROM (
				SELECT rownum rn, a. * FROM(
					    SELECT 
					       H.hotel_name,
					        R.room_name,
					        RV.reserve_in,
					        RV.reserve_out,
					        RW.review_score,
					        RW.review_content,
					        RW.review_when,
					        RW.review_no
					FROM 
					        hotel H 
					        inner join room R on R.hotel_no = H.hotel_no
					        inner join reserve RV on  RV.reserve_room_no = R.room_no
					        inner join review RW on  RW.review_reserve = RV.reserve_no
					 WHERE review_state = '등록'
							<if test="type != null and keyword != null">
									AND ${type} like '%'||#{keyword}||'%'
							</if>
							order by review_no desc)a
			) WHERE rn BETWEEN #{start} and #{end}
	</select>
	
	<!-- 리뷰 리스트  카운트 -->
	<select id="count_review_list" parameterType="map" resultType="int">
		select count(*) from review
			where
		<if test="type != null and keyword != null">
			${type} like '%' || #{keyword} || '%' and
		</if>
			review_state = '등록'
	</select>
	
	<!-- 리뷰 블랙리스트  -->
	<select id="admin_review_blacklist" parameterType="map" resultType="reviewVO">
		SELECT * FROM (
				SELECT rownum rn, a. * FROM(
					    SELECT 
					       H.hotel_name,
					        R.room_name,
					        RV.reserve_in,
					        RV.reserve_out,
					        RW.review_score,
					        RW.review_content,
					        RW.review_when,
					        RW.review_no
					FROM 
					        hotel H 
					        inner join room R on R.hotel_no = H.hotel_no
					        inner join reserve RV on  RV.reserve_room_no = R.room_no
					        inner join review RW on  RW.review_reserve = RV.reserve_no
					 WHERE review_state = '블랙'
							<if test="type != null and keyword != null">
									AND ${type} like '%'||#{keyword}||'%'
							</if>
							order by review_no desc)a
			) WHERE rn BETWEEN #{start} and #{end}
	</select>
	
	<!-- 리뷰 블랙리스트  카운트 -->
	<select id="count_review_blacklist" parameterType="map" resultType="int">
		select count(*) from review
			where
		<if test="type != null and keyword != null">
			${type} like '%' || #{keyword} || '%' and
		</if>
			review_state = '블랙'
	</select>
	
	<!-- 리뷰 블랙리스트 처리 -->
	<update id="edit" parameterType="reviewDto">
		update review
			set review_state = #{review_state}
		where review_no = #{review_no}
	</update>
	
	<!-- 리뷰 정보 -->
 	<select id="get" parameterType="int" resultType="reviewDto">
		select * from review where review_no = #{review_no}
 	</select>
</mapper>