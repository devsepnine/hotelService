<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 이파일은 sql 명령만 보관하는파일  -->
<!-- 찾아올수 있도록 namespace 지정 -->
<mapper namespace="seller">
	<insert id="regist" parameterType="sellerDto">
		insert into seller values(
			seller_seq.nextval, #{seller_id}, #{seller_pw}, #{seller_phone}, #{seller_name},
			#{seller_lisence}, #{seller_zip_code}, #{seller_basic_addr}, #{seller_detail_addr},
			#{seller_birth}, #{seller_email_id}, #{seller_email_addr}, sysdate
		)
	</insert>
	
	<!-- 아이디 중복검사 -->
	
	<select id="id_ckeck" parameterType="string" resultType="sellerDto">
		select * from seller where seller_id = #{seller_id}
	</select>
	
	<!-- 로그인 -->
	<select id="login" parameterType="sellerDto" resultType="sellerDto">
		select * from seller where seller_id = #{seller_id} and seller_pw = #{seller_pw}
	</select>

	<!-- 판매자정보 상세보기 -->
	<select id="get" parameterType="int" resultType="sellerDto">
		select * from seller where seller_no = #{seller_no}
	</select>
	
	<!-- 사업자번호 중복 조회 -->
	<select id="lisence_ckeck" parameterType="String" resultType="sellerDto">
		select * from seller where seller_lisence = #{seller_lisence}
	</select>
	
	<!-- 판매자 탈퇴탈퇴 -->
	<delete id="delete" parameterType="string">
		delete seller where seller_id = #{seller_id}
	</delete>
	
	<!-- 판매자 정보 변경 -->
	<update id="change" parameterType="sellerDto">
		update seller
			set
				seller_phone = #{seller_phone},
				seller_zip_code = #{seller_zip_code},
				seller_basic_addr = #{seller_basic_addr},
				seller_detail_addr = #{seller_detail_addr},
				seller_email_id = #{seller_email_id},
				seller_email_addr = #{seller_email_addr}
			where
				seller_id = #{seller_id}
	</update>
	
	<!-- 판매자 비밀번호 찾기 -->
	<select id="find_pw" parameterType="sellerDto" resultType="sellerDto">
		select * from seller where seller_id = #{seller_id} and seller_phone = #{seller_phone} and seller_birth = to_date(#{seller_birth},'yyyy/mm/dd')
	</select>
	
	<!-- 판매자 비밀번호 변경 -->
	
	<update id="changePw" parameterType="sellerDto">
		update seller
			set
				seller_pw = #{seller_pw}
			where
				seller_no = #{seller_no}
	</update>
	
	<!-- 판매자 아이디 찾기 -->
	<select id="find_id" parameterType="sellerDto" resultType="sellerDto">
		select * from seller
			where
				seller_name = #{seller_name} and seller_phone = #{seller_phone} and seller_birth = to_date(#{seller_birth},'yyyy/mm/dd')
	</select>
	
	<!-- 판매자 변경 비밀번호 찾기 -->
	<select id="check_pw" parameterType="sellerDto" resultType="sellerDto">
		select * from seller
			where
				seller_id = #{seller_id} and seller_pw = #{seller_pw}
	</select>
	
	<!-- 로그인 판매자 비밀번호 변경 -->
	<update id="change_pw" parameterType="sellerDto">
		update seller
			set
				seller_pw = #{seller_pw}
			where
				seller_no = #{seller_no}
	</update>
	
	
	<!-- 관리자 -->
	
	<!-- 판매자 리스트 -->
	<select id="list" parameterType="map" resultType="sellerDto">
		<!-- 부등호 등 태그 형식에서 사용 불가한 글자를 허용하는 지역 생성 -->
		<![CDATA[
		select *  from(
    		select rownum r, s.* from(select * from seller 
		]]>
			<if test="type != null and keyword != null">
			where
				${type} like '%' || #{keyword} || '%'
			</if>
		<![CDATA[
			 order by seller_no desc )s)  where r >= #{start} and r <= #{end}
		]]>
	</select>
	
	<!-- 목록/ 검색일때 리스트 갯수 구하는거  -->
	<select id="count" parameterType="map" resultType="int">
		select count(*) from seller
		<if test="type != null and keyword != null">
			where ${type} like '%' || #{keyword} || '%'
		</if>
	</select>
	
</mapper>