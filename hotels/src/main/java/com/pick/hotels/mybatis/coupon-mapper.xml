<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
	이 파일은 SQL 명령만 보관하는 파일
	따라서 외부에서 접근할 수 있도록 namespace를 지정
 -->
 
 <mapper namespace="coupon">
 
 	<!-- 쿠폰 등록하기 -->
 	<insert id="regist" parameterType="couponDto">
 		insert into coupon values(#{coupon_no}, #{coupon_name}, #{coupon_price}, #{coupon_date1}, #{coupon_date2}, #{coupon_minimum}, #{coupon_condition})
 	</insert>
 
 	<!-- 쿠폰 상세보기 -->
 	<select id="get" parameterType="int" resultType="couponDto">
		select * from coupon where coupon_no = #{coupon_no}
 	</select>
 	
 	<!-- 쿠폰 리스트 -->
	<select id="list" parameterType="map" resultType="couponDto">
		<!-- 부등호 등 태그 형식에서 사용 불가한 글자를 허용하는 지역 생성 -->
		<![CDATA[
		select *  from(
    		select rownum r, c.* from(select * from coupon 
		]]>
			<if test="type != null and keyword != null">
			where
				${type} like '%' || #{keyword} || '%'
			</if>
		<![CDATA[
			 order by coupon_no desc )c)  where r >= #{start} and r <= #{end} and coupon_condition = '사용가능'
		]]>
	</select>
	
	<!-- 사용 만료 쿠폰 리스트 -->
	<select id="blacklist" parameterType="map" resultType="couponDto">
		<!-- 부등호 등 태그 형식에서 사용 불가한 글자를 허용하는 지역 생성 -->
		<![CDATA[
		select *  from(
    		select rownum r, c.* from(select * from coupon 
		]]>
			<if test="type != null and keyword != null">
			where
				${type} like '%' || #{keyword} || '%'
			</if>
		<![CDATA[
			 order by coupon_no desc )c)  where r >= #{start} and r <= #{end} and coupon_condition = '사용불가능'
		]]>
	</select>
	
	<!-- 목록/ 검색일 경우 각각의 게시글 수를 구하는 거 -->
	<select id="count" parameterType="map" resultType="int">
		select count(*) from coupon
		<if test="type != null and keyword != null">
			where ${type} like '%' || #{keyword} || '%'
		</if>
	</select>
	
	<!-- 쿠폰 수정 -->
	<update id="edit" parameterType="couponDto">
		update coupon 
			set coupon_condition = #{coupon_condition}
		where coupon_no = #{coupon_no}
	</update>
	
	<!-- 시퀀스 번호 -->
	<select id="seq" resultType="int">
		select coupon_seq.nextval from dual
	</select>
	
	
	
	<!-- 회원 내 쿠폰 리스트 -->
	<select id="coupon_list" parameterType="int" resultType="couponVO">
	     select 
            C.coupon_no,
            C.coupon_name,
            C.coupon_price,
            C.coupon_date1,
            C.coupon_date2,
            C.coupon_minimum,
            C.coupon_condition,
            CH.coupon_history_no,
            CH.member_no,
            CH.coupon_get_date
    from
            coupon C
           left outer join coupon_history CH on CH.coupon_no = C.coupon_no
    where CH.member_no =#{member_no} and C.coupon_condition = '사용가능'
   
	</select>
	
	
	
 </mapper>